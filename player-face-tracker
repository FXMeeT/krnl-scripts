local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Camera = workspace.CurrentCamera
local LocalPlayer = Players.LocalPlayer

-- GUI Setup
local gui = Instance.new("ScreenGui", LocalPlayer:WaitForChild("PlayerGui"))
gui.Name = "TrackerUI"
gui.ResetOnSpawn = false

local frame = Instance.new("Frame", gui)
frame.Size = UDim2.new(0, 240, 0, 380)
frame.Position = UDim2.new(0, 100, 0, 100)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.Active = true
frame.Draggable = true

local title = Instance.new("TextLabel", frame)
title.Size = UDim2.new(1, 0, 0, 30)
title.Text = "Face Target Tracker"
title.TextColor3 = Color3.new(1, 1, 1)
title.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
title.Font = Enum.Font.SourceSansBold
title.TextSize = 16

local toggle = Instance.new("TextButton", frame)
toggle.Size = UDim2.new(1, -20, 0, 30)
toggle.Position = UDim2.new(0, 10, 0, 40)
toggle.Text = "Deactivate"
toggle.TextColor3 = Color3.new(1, 1, 1)
toggle.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
toggle.Font = Enum.Font.SourceSans
toggle.TextSize = 16

local partToggle = Instance.new("TextButton", frame)
partToggle.Size = UDim2.new(1, -20, 0, 30)
partToggle.Position = UDim2.new(0, 10, 0, 80)
partToggle.Text = "Face: Head"
partToggle.TextColor3 = Color3.new(1, 1, 1)
partToggle.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
partToggle.Font = Enum.Font.SourceSans
partToggle.TextSize = 16

local modeToggle = Instance.new("TextButton", frame)
modeToggle.Size = UDim2.new(1, -20, 0, 30)
modeToggle.Position = UDim2.new(0, 10, 0, 120)
modeToggle.Text = "Mode: Body + Camera"
modeToggle.TextColor3 = Color3.new(1, 1, 1)
modeToggle.BackgroundColor3 = Color3.fromRGB(100, 120, 100)
modeToggle.Font = Enum.Font.SourceSans
modeToggle.TextSize = 16

local scroll = Instance.new("ScrollingFrame", frame)
scroll.Size = UDim2.new(1, -20, 1, -170)
scroll.Position = UDim2.new(0, 10, 0, 170)
scroll.CanvasSize = UDim2.new(0, 0, 0, 0)
scroll.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
scroll.ScrollBarThickness = 4
scroll.BorderSizePixel = 0

-- Variables
local selectedPlayer = nil
local tracking = true
local facePart = "Head"
local followMode = "Body + Camera" -- Options: "Body Only", "Camera Only", "Body + Camera"

-- Functions
local function refreshList()
	scroll:ClearAllChildren()
	local y = 0
	for _, player in ipairs(Players:GetPlayers()) do
		if player ~= LocalPlayer then
			local button = Instance.new("TextButton", scroll)
			button.Size = UDim2.new(1, 0, 0, 30)
			button.Position = UDim2.new(0, 0, 0, y)
			button.Text = player.Name
			button.TextColor3 = Color3.new(1, 1, 1)
			button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
			button.Font = Enum.Font.SourceSans
			button.TextSize = 14
			button.MouseButton1Click:Connect(function()
				selectedPlayer = player
			end)
			y += 32
		end
	end
	scroll.CanvasSize = UDim2.new(0, 0, 0, y)
end

refreshList()
Players.PlayerAdded:Connect(refreshList)
Players.PlayerRemoving:Connect(function(p)
	if selectedPlayer == p then selectedPlayer = nil end
	refreshList()
end)

-- Toggles
toggle.MouseButton1Click:Connect(function()
	tracking = not tracking
	toggle.Text = tracking and "Deactivate" or "Activate"
end)

partToggle.MouseButton1Click:Connect(function()
	facePart = (facePart == "Head") and "HumanoidRootPart" or "Head"
	partToggle.Text = "Face: " .. facePart
end)

modeToggle.MouseButton1Click:Connect(function()
	if followMode == "Body + Camera" then
		followMode = "Body Only"
	elseif followMode == "Body Only" then
		followMode = "Camera Only"
	else
		followMode = "Body + Camera"
	end
	modeToggle.Text = "Mode: " .. followMode
end)

-- Main update loop
RunService.RenderStepped:Connect(function()
	if not tracking or not selectedPlayer or not selectedPlayer.Character then return end

	local target = selectedPlayer.Character:FindFirstChild(facePart)
	local myChar = LocalPlayer.Character
	local myHRP = myChar and myChar:FindFirstChild("HumanoidRootPart")

	if target and myHRP then
		local direction = (target.Position - myHRP.Position)
		direction = Vector3.new(direction.X, 0, direction.Z).Unit
		local lookAt = myHRP.Position + direction

		if followMode == "Body + Camera" or followMode == "Body Only" then
			myHRP.CFrame = CFrame.new(myHRP.Position, lookAt)
		end

		if followMode == "Body + Camera" or followMode == "Camera Only" then
			local camPos = Camera.CFrame.Position
			Camera.CFrame = CFrame.new(camPos, target.Position)
		end
	end
end)
